---
import { createAvatar as dicebearCreateAvatar } from '@dicebear/core';
import * as identicon from '@dicebear/identicon';

function createAvatar(seed: string) {
  const avatar = dicebearCreateAvatar(identicon, {
    seed: seed,
    scale: 70,
    randomizeIds: false,
  });

  return avatar.toString();
}

const alanSVG = createAvatar('A');
const gitanaSVG = createAvatar('Gitana');

---

<div class="background">
  <div class="circle">
    <span set:html={alanSVG} class="agent" data-agent="alan"></span>
    <span set:html={gitanaSVG} class="agent" data-agent="gitana"></span>
  </div>
  <div class="circle" />
  <div class="circle" />
  <div class="circle" />
  <div class="circle" />
  <div class="circle" />
  <div class="backdrop" />
</div>

<style is:global>
  .background {
    /* --interval: 10s; */
    --intervalx2: 20s;
    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
    /* width: 100%; */
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: black;
  }

  .background svg {
    fill: hsl(210 30% 6%);
    fill: currentColor;
  }

  .background svg path {
    fill: inherit;
  }

  .circle {
    z-index: 6;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20vw;
    height: 20vw;
    background-color: hsl(210 30% 0%);
    padding: 60px;
    border-radius: 50%;
    box-shadow: inset 0px 0px 42px 0px hsl(210 45% 45% / 0.6),
      0px 0px 59px 0px hsl(201 40% 30% / 0.3);
  }
  .circle:nth-child(1) {
    animation: pulsar-inset var(--interval) infinite ease-in-out;
  }
  .circle:nth-child(2) {
    z-index: 5;
    transform: translate(-50%,-50%) scale(1.5);
    border-color: hsl(210 30% 11%);
    z-index: 2;
  }
  .circle:nth-child(3) {
    z-index: 4;
    transform: translate(-50%,-50%) scale(1.8);
    border-color: hsl(210 30% 16%);
    box-shadow: 0px 0px 20px 0px hsl(206.57deg 76.74% 19.12%);
    animation: pulsar var(--interval) infinite ease-in-out;
  }
  .circle:nth-child(4) {
    z-index: 3;
    transform: translate(-50%,-50%) scale(3);
    border-color: hsl(210 30% 21%);
    background-color: hsl(210 30% 0%);
    box-shadow: inset 0px 0px 23px 1px hsl(210 40% 30% / 0.3);
    animation: pulsar-inset var(--interval) infinite ease-in-out;
  }

  .circle:nth-child(5) {
    z-index: 2;
    transform: translate(-50%,-50%) scale(4);
    border-color: hsl(210 30% 21%);
    background-color: hsl(210 30% 0%);
    box-shadow: 0px 0px 20px 0px hsl(206.57deg 76.74% 19.12%);
    animation: pulsar var(--interval) infinite ease-in-out;
  }
  .circle:nth-child(6) {
    z-index: 1;
    transform: translate(-50%,-50%) scale(5.5);
    border-color: hsl(210 30% 21%);
    background-color: hsl(210 30% 0%);
    box-shadow: inset 0px 0px 23px 1px hsl(210 40% 30% / 0.3);
    animation: pulsar-inset var(--interval) infinite ease-in-out;
  }
  .agent {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform: scale(0.5);
    opacity: 0;
  }
  .agent[data-agent="alan"] {
    color: hsl(260 45% 45% / 0.6);
    animation: pulsar-agent var(--interval) infinite ease-in-out;
  }
  .agent[data-agent="gitana"] {
    color: hsl(210 45% 45% / 0.6);
    animation: pulsar-agent var(--interval) infinite ease-in-out;
    animation-delay: calc(var(--interval) / 2);
  }

  @keyframes pulsar {
    0% {
      box-shadow: 0px 0px 20px hsl(210 45% 45% / 0.6);
    }
    50% {
      box-shadow: 0px 0px 10px hsl(260 45% 45% / 0.6);
    }
    100% {
      box-shadow: 0px 0px 20px hsl(210 45% 45% / 0.6);
    }
  }
  @keyframes pulsar-inset {
    0% {
      box-shadow: inset 0px 0px 15px 1px hsl(210 45% 45% / 0.6);
    }
    50% {
      box-shadow: inset 0px 0px 5px 1px hsl(260 45% 45% / 0.6);
    }
    100% {
      box-shadow: inset 0px 0px 15px 1px hsl(210 45% 45% / 0.6);
    }
  }
  @keyframes pulsar-agent {
    0% {
      opacity: 0;
    }
    /* 30% {
      opacity: 0.8;
    } */
    50% {
      opacity: 1;
    }
    70% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }
</style>
