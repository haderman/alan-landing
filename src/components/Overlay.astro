---
import { createAvatar as dicebearCreateAvatar } from '@dicebear/core';
import * as identicon from '@dicebear/identicon';
import { nanoid } from 'nanoid';

function createAvatar(seed?: string) {
  const avatar = dicebearCreateAvatar(identicon, {
    seed: nanoid(),
    scale: 70,
    randomizeIds: false,
  });

  return avatar.toString();
}

const avatars = Array.from({ length: 6 }, () => createAvatar());
---

<div class="overlay">
  <div>
    {avatars.map((avatar) => (
      <div class="container identicon" set:html={avatar} />
    ))}
  </div>
</div>

<script>
  document.body.addEventListener('pointermove', (e) => {
    const overlayEl = document.body;
    const x = e.pageX - document.body.offsetLeft;
    const y = e.pageY - document.body.offsetTop;

    overlayEl.style.setProperty('--opacity', '1');
    overlayEl.style.setProperty('--x', `${x}px`);
    overlayEl.style.setProperty('--y', `${y}px`);
  });
</script>

<style is:global>
  .overlay {
    position: absolute;
    inset: 0;
    pointer-events: none;
    user-select: none;
    opacity: var(--opacity, 0);
    -webkit-mask: radial-gradient(
      25rem 25rem at var(--x) var(--y),
      #000 1%,
      transparent 50%
    );
    mask: radial-gradient(
      25rem 25rem at var(--x) var(--y),
      #000 1%,
      transparent 50%
    );
    transition: 400ms mask ease;
    will-change: mask;
  }

  .overlay > div {
    padding: 1rem;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(6, 1fr);
    /* grid-template-rows: repeat(8, 1fr); */
  }

  .container.identicon {
    /* border: 1px solid hsl(210deg 27% 11% / 100%); */
  }

  .identicon {
    /* width: 128px; */
    /* color: hsl(210deg 27% 11%); */
    color: hsl(210deg 47% 41%);
  }

  .identicon path {
    fill: currentColor;
  }
</style>
